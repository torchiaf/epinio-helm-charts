{{- $secret := (lookup "v1" "Secret" .Release.Namespace "epinio-ui").data -}}
{{- $encryptionKey := empty $secret | ternary (printf "%x" (randAscii 32)) (b64dec (default "" $secret.encryptionKey)) -}}
{{- $sessionSecret := empty $secret | ternary (randAlphaNum 16) (b64dec (default "" $secret.sessionSecret)) -}}

{{- $dexSecret := (lookup "v1" "Secret" .Release.Namespace "dex-config") -}}
{{- $uiClientSecret := empty $dexSecret | ternary (.Values.dex.ui.secret) (b64dec (default "" $dexSecret.uiClientSecret)) -}}

---
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: epinio-ui
  namespace: {{ .Release.Namespace }}
stringData:
  encryptionKey: {{ $encryptionKey }}
  sessionSecret: {{ $sessionSecret }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: epinio-ui
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "epinio-ui.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "epinio-ui.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "epinio-ui.labels" . | nindent 8 }}
    spec:
      containers:
      - name: epinio-ui
        image: {{ template "epinio-ui.registry" . }}{{ .Values.epinioUI.image.repository }}:{{ .Values.epinioUI.image.tag }}
        imagePullPolicy: {{ .Values.epinioUI.imagePullPolicy }}
        workingDir: /db

        env:
        - name: ALLOWED_ORIGINS
          value: {{ default (printf "https://epinio.%s" .Values.global.domain) .Values.epinioUI.allowedOrigins }}
        - name: EPINIO_API_URL
          value: {{ default (printf "http://epinio-server.%s.svc.cluster.local" .Release.Namespace) .Values.epinioUI.apiURL }}
        - name: EPINIO_WSS_URL
          value: {{ default (printf "ws://epinio-server.%s.svc.cluster.local" .Release.Namespace) .Values.epinioUI.wssURL }}
        - name: EPINIO_UI_URL
          value: {{ default (printf "https://epinio.%s" .Values.global.domain) .Values.epinioUI.uiURL }}
        - name: EPINIO_API_SKIP_SSL
          value: {{ (default "false" .Values.epinioUI.apiSkipSSL) | quote }}
        - name: EPINIO_THEME
          value: {{ (default "light" .Values.epinioUI.theme) | quote }}
        {{- if .Values.global.dex.enabled }}
        - name: EPINIO_DEX_AUTH_URL
          value: {{ default (printf "http://dex.%s.svc.cluster.local:5556" .Release.Namespace) .Values.epinioUI.dexURL }}
        - name: EPINIO_DEX_ISSUER
          value: {{ printf "https://auth.%s" .Values.global.domain }}
        - name: EPINIO_DEX_ENABLED
          value: "true"
        - name: EPINIO_DEX_SECRET
          valueFrom:
            secretKeyRef:
              name: dex-config
              key: uiClientSecret
        {{- end }}
        - name: HTTP_CLIENT_TIMEOUT_IN_SECS
          value: "120"
        - name: SESSION_STORE_SECRET
          valueFrom:
            secretKeyRef:
              name: epinio-ui
              key: sessionSecret
        - name: SESSION_STORE_EXPIRY
          value: "1440"
        - name: UI_PATH
          value: "/ui"
        - name: AUTH_ENDPOINT_TYPE
          value: epinio
        - name: ENCRYPTION_KEY
          valueFrom:
            secretKeyRef:
              name: epinio-ui
              key: encryptionKey

        - name: DATABASE_PROVIDER
          value: sqlite
        - name: HTTPS
          value: "false"
        - name: CONSOLE_PROXY_TLS_ADDRESS
          value: 0.0.0.0:8000
        - name: LOG_LEVEL
          value: {{ .Values.epinioUI.logLevel | quote }}

        {{- with .Values.volumeMounts }}
        volumeMounts:
          {{- toYaml . | nindent 8 }}
        {{- end }}

        securityContext:
          runAsUser: 1000
          runAsNonRoot: true
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
        livenessProbe:
          tcpSocket:
            port: 8000
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          tcpSocket:
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
      {{- with .Values.volumes }}
      volumes:
        {{- toYaml . | nindent 6 }}
      {{- end }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: code-server
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "code-server.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "code-server.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "code-server.labels" . | nindent 8 }}
    spec:
      containers:
      - name: code-server
        image: lscr.io/linuxserver/code-server:latest
        imagePullPolicy: {{ .Values.epinioUI.imagePullPolicy }}
        workingDir: /

        env:
        - name: LOG_LEVEL
          value: {{ .Values.epinioUI.logLevel | quote }}

        securityContext:
          runAsUser: 1000
          runAsNonRoot: true
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
        livenessProbe:
          tcpSocket:
            port: 8000
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          tcpSocket:
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
